#include "SDLWindow.h"
#include "MessageServer.h"

/*
 * Converts the SDL Keycode into OFG Keycodes.
 */
EKeyboardInput SDLWindow::ConvertSDLKeyCodeToOGFKeycode(int32_t key) {
  switch (key) {
  case SDLK_0:
    return EKEY_0;
  case SDLK_1:
    return EKEY_1;
  case SDLK_2:
    return EKEY_2;
  case SDLK_3:
    return EKEY_3;
  case SDLK_4:
    return EKEY_4;
  case SDLK_5:
    return EKEY_5;
  case SDLK_6:
    return EKEY_6;
  case SDLK_7:
    return EKEY_7;
  case SDLK_8:
    return EKEY_8;
  case SDLK_9:
    return EKEY_9;
  case SDLK_a:
    return EKEY_A;
  case SDLK_b:
    return EKEY_B;
  case SDLK_c:
    return EKEY_C;
  case SDLK_d:
    return EKEY_D;
  case SDLK_e:
    return EKEY_E;
  case SDLK_f:
    return EKEY_F;
  case SDLK_g:
    return EKEY_G;
  case SDLK_h:
    return EKEY_H;
  case SDLK_i:
    return EKEY_I;
  case SDLK_j:
    return EKEY_J;
  case SDLK_k:
    return EKEY_K;
  case SDLK_l:
    return EKEY_L;
  case SDLK_m:
    return EKEY_M;
  case SDLK_n:
    return EKEY_N;
  case SDLK_o:
    return EKEY_O;
  case SDLK_p:
    return EKEY_P;
  case SDLK_q:
    return EKEY_Q;
  case SDLK_r:
    return EKEY_R;
  case SDLK_s:
    return EKEY_S;
  case SDLK_t:
    return EKEY_T;
  case SDLK_u:
    return EKEY_U;
  case SDLK_v:
    return EKEY_V;
  case SDLK_w:
    return EKEY_W;
  case SDLK_x:
    return EKEY_X;
  case SDLK_y:
    return EKEY_Y;
  case SDLK_z:
    return EKEY_Z;
  case SDLK_BACKSPACE:
    return EKEY_BACKSPACE;
  case SDLK_CAPSLOCK:
    return EKEY_CAPSLOCK;
  case SDLK_DELETE:
    return EKEY_DELETE;
  case SDLK_END:
    return EKEY_END;
  case SDLK_ESCAPE:
    return EKEY_ESCAPE;
  case SDLK_F1:
    return EKEY_F1;
  case SDLK_F2:
    return EKEY_F2;
  case SDLK_F3:
    return EKEY_F3;
  case SDLK_F4:
    return EKEY_F4;
  case SDLK_F5:
    return EKEY_F5;
  case SDLK_F6:
    return EKEY_F6;
  case SDLK_F7:
    return EKEY_F7;
  case SDLK_F8:
    return EKEY_F8;
  case SDLK_F9:
    return EKEY_F9;
  case SDLK_F10:
    return EKEY_F10;
  case SDLK_F11:
    return EKEY_F11;
  case SDLK_F12:
    return EKEY_F12;
  case SDLK_F13:
    return EKEY_F13;
  case SDLK_F14:
    return EKEY_F14;
  case SDLK_F15:
    return EKEY_F15;
  case SDLK_F16:
    return EKEY_F16;
  case SDLK_F17:
    return EKEY_F17;
  case SDLK_F18:
    return EKEY_F18;
  case SDLK_F19:
    return EKEY_F19;
  case SDLK_F20:
    return EKEY_F20;
  case SDLK_F21:
    return EKEY_F21;
  case SDLK_F22:
    return EKEY_F22;
  case SDLK_F23:
    return EKEY_F23;
  case SDLK_F24:
    return EKEY_F24;
  case SDLK_HOME:
    return EKEY_HOME;
  case SDLK_INSERT:
    return EKEY_INSERT;
  case SDLK_KP_0:
    return EKEY_KP_0;
  case SDLK_KP_1:
    return EKEY_KP_1;
  case SDLK_KP_2:
    return EKEY_KP_2;
  case SDLK_KP_3:
    return EKEY_KP_3;
  case SDLK_KP_4:
    return EKEY_KP_4;
  case SDLK_KP_5:
    return EKEY_KP_5;
  case SDLK_KP_6:
    return EKEY_KP_6;
  case SDLK_KP_7:
    return EKEY_KP_7;
  case SDLK_KP_8:
    return EKEY_KP_8;
  case SDLK_KP_9:
    return EKEY_KP_9;
  case SDLK_KP_DECIMAL:
    return EKEY_KP_DECIMAL;
  case SDLK_KP_DIVIDE:
    return EKEY_KP_DIV;
  case SDLK_KP_ENTER:
    return EKEY_KP_ENTER;
  case SDLK_KP_PLUS:
    return EKEY_KP_PLUS;
  case SDLK_KP_MINUS:
    return EKEY_KP_MINUS;
  case SDLK_KP_MULTIPLY:
    return EKEY_KP_MUL;
  case SDLK_LALT:
    return EKEY_LEFT_ALT;
  case SDLK_RALT:
    return EKEY_RIGHT_ALT;
  case SDLK_LCTRL:
    return EKEY_LEFT_CTRL;
  case SDLK_RCTRL:
    return EKEY_RIGHT_CTRL;
  case SDLK_LSHIFT:
    return EKEY_LEFT_SHIFT;
  case SDLK_RSHIFT:
    return EKEY_RIGHT_SHIFT;
  case SDLK_NUMLOCKCLEAR:
    return EKEY_NUMLOCK;
  case SDLK_LEFT:
    return EKEY_LEFT;
  case SDLK_RIGHT:
    return EKEY_RIGHT;
  case SDLK_UP:
    return EKEY_UP;
  case SDLK_DOWN:
    return EKEY_DOWN;
  case SDLK_SEMICOLON:
    return EKEY_SEMICOLON;
  case SDLK_TAB:
    return EKEY_TAB;
  case SDLK_COMMA:
    return EKEY_COMMA;
  case SDLK_PERIOD:
    return EKEY_PERIOD;
  case SDLK_RETURN:
    return EKEY_ENTER;
  case SDLK_BACKQUOTE:
    return EKEY_TILDE;
  case SDLK_EQUALS:
    return EKEY_EQUAL;
  case SDLK_MINUS:
    return EKEY_MINUS;
  case SDLK_LEFTBRACKET:
    return EKEY_LEFT_BRACKET;
  case SDLK_RIGHTBRACKET:
    return EKEY_RIGHT_BRACKET;
  case SDLK_BACKSLASH:
    return EKEY_BACKSLASH;
  case SDLK_SPACE:
    return EKEY_SPACE;
  default:
    return EKEY_UNKNOWN;
  }
}
